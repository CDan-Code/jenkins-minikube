# Default values for jenkins.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

## Overrides for generated resource names
# See templates/_helpers.tpl
# nameOverride:
# fullnameOverride:

master:
  componentName: jenkins-master
  imagePullPolicy: "Always"
  useSecurity: true
  adminUser: admin
  #AdminPassword: junk
  resources:
    requests:
      cpu: "50m"
      memory: "256Mi"
    limits:
      cpu: "2000m"
      memory: "4096Mi"
  servicePort: 8080
  # For minikube, set this to NodePort, elsewhere use LoadBalancer
  # <to set explicitly, choose port between 30000-32767>
  serviceType: NodePort
  nodePort: 32000
  serviceAnnotations: {}
  targetPort: 8080
  # Enable Kubernetes Liveness and Readiness Probes
  healthProbes: true
  healthProbesLivenessTimeout: 60
  healthProbesReadinessTimeout: 60
  healthProbeLivenessPeriodSeconds: 10
  healthProbeReadinessPeriodSeconds: 10
  healthProbeLivenessFailureThreshold: 5
  healthProbeReadinessFailureThreshold: 3
  healthProbeLivenessInitialDelay: 90
  healthProbeReadinessInitialDelay: 60
  slaveListenerPort: 50000

  loadBalancerSourceRanges:
    - 0.0.0.0/0
  # List of plugins to be install during Jenkins master start
  installPlugins:
    - kubernetes:1.18.1
    - workflow-aggregator:2.6
    - workflow-job:2.32
    - credentials-binding:1.19
    - git:3.11.0
    - github:1.29.4
    - greenballs:1.440
    - blueocean:1.17

  # Used to approve a list of groovy functions in pipelines used the script-security plugin. Can be viewed under /scriptApproval
  scriptApproval:
    - "method groovy.json.JsonSlurperClassic parseText java.lang.String"
    - "new groovy.json.JsonSlurperClassic"
    - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods leftShift java.util.Map java.util.Map"
    - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods split java.lang.String"

  overwriteConfig: false
  overwritePlugins: false
  NodeSelector: {}
  Tolerations: {}
  
  jobs: 
    docker-demo: |-
      <org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject plugin="workflow-multibranch@2.21">
      <actions/>
      <description/>
      <properties>
      <org.csanchez.jenkins.plugins.kubernetes.KubernetesFolderProperty plugin="kubernetes@1.18.1">
      <permittedClouds/>
      </org.csanchez.jenkins.plugins.kubernetes.KubernetesFolderProperty>
      <org.jenkinsci.plugins.pipeline.modeldefinition.config.FolderConfig plugin="pipeline-model-definition@1.3.9">
      <dockerLabel/>
      <registry plugin="docker-commons@1.15"/>
      </org.jenkinsci.plugins.pipeline.modeldefinition.config.FolderConfig>
      </properties>
      <folderViews class="jenkins.branch.MultiBranchProjectViewHolder" plugin="branch-api@2.5.4">
      <owner class="org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject" reference="../.."/>
      </folderViews>
      <healthMetrics>
      <com.cloudbees.hudson.plugins.folder.health.WorstChildHealthMetric plugin="cloudbees-folder@6.9">
      <nonRecursive>false</nonRecursive>
      </com.cloudbees.hudson.plugins.folder.health.WorstChildHealthMetric>
      </healthMetrics>
      <icon class="jenkins.branch.MetadataActionFolderIcon" plugin="branch-api@2.5.4">
      <owner class="org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject" reference="../.."/>
      </icon>
      <orphanedItemStrategy class="com.cloudbees.hudson.plugins.folder.computed.DefaultOrphanedItemStrategy" plugin="cloudbees-folder@6.9">
      <pruneDeadBranches>true</pruneDeadBranches>
      <daysToKeep>-1</daysToKeep>
      <numToKeep>-1</numToKeep>
      </orphanedItemStrategy>
      <triggers/>
      <disabled>false</disabled>
      <sources class="jenkins.branch.MultiBranchProject$BranchSourceList" plugin="branch-api@2.5.4">
      <data>
      <jenkins.branch.BranchSource>
      <source class="jenkins.plugins.git.GitSCMSource" plugin="git@3.11.0">
      <id>37ccb7c1-2e89-4c2c-b57f-f4a439253f7e</id>
      <remote>https://github.com/CDan-Code/docker-demo</remote>
      <credentialsId/>
      <traits>
      <jenkins.plugins.git.traits.BranchDiscoveryTrait/>
      </traits>
      </source>
      <strategy class="jenkins.branch.DefaultBranchPropertyStrategy">
      <properties class="empty-list"/>
      </strategy>
      </jenkins.branch.BranchSource>
      </data>
      <owner class="org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject" reference="../.."/>
      </sources>
      <factory class="org.jenkinsci.plugins.workflow.multibranch.WorkflowBranchProjectFactory">
      <owner class="org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject" reference="../.."/>
      <scriptPath>Jenkinsfile</scriptPath>
      </factory>
      </org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject>

agent:
  enabled: true
  podName: "jenkins-build-agent"
  customJenkinsLabels: ["slave-docker"]
  componentName: "jenkins-build-agent"
  yamlTemplate: |-
    apiVersion: "v1"
    kind: "Pod"
    metadata:
      annotations: {}
      labels:
        jenkins: "slave"
        jenkins/slave-docker: "true"
    spec:
      containers:
      - args:
        - "-e"
        command:
        - "cat"
        image: "docker:dind"
        imagePullPolicy: "IfNotPresent"
        name: "docker"
        resources:
          limits: {}
          requests: {}
        securityContext:
          privileged: true
        tty: true
        volumeMounts:
        - mountPath: "/var/run/docker.sock"
          name: "dock-sock-volume"
          readOnly: false
        - mountPath: "/home/jenkins"
          name: "workspace-volume"
          readOnly: false
        workingDir: "/home/jenkins"
      nodeSelector: {}
      restartPolicy: "Never"
      serviceAccount: "default"
      volumes:
      - hostPath:
          path: "/var/run/dind/docker.sock"
        name: "dock-sock-volume"
      - emptyDir:
          medium: ""
        name: "workspace-volume"

networkPolicy:
  # Enable creation of NetworkPolicy resources.
  enabled: false
  # For Kubernetes v1.4, v1.5 and v1.6, use 'extensions/v1beta1'
  # For Kubernetes v1.7, use 'networking.k8s.io/v1'
  apiVersion: networking.k8s.io/v1

## Install Default RBAC roles and bindings
rbac:
  create: true
  serviceAccount:
    name: default
  # RBAC api version (currently either v1beta1 or v1alpha1)
  apiVersion: v1beta1
  # Cluster role reference
  #roleRef: cluster-admin

